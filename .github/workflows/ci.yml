name: ci
'on':
  push:
    paths-ignore:
      - guides/**
permissions: read-all
jobs:
  ci:
    env:
      MIX_ENV: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              elixir: 1.18.3-otp-27
              otp: 27.3.1
    runs-on: ubuntu-24.04
    services:
      postgres:
        image: postgres
        ports:
          - '5432:5432'
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: basenji_dev
    steps:
      - name: 'Install unrar, optipng, jpegoptim'
        run: sudo apt install -y unrar optipng jpegoptim

      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - uses: erlef/setup-beam@75edbb82877ab10edeb12a99c3cf2f0909f3dc87
        with:
          otp-version: '${{matrix.pair.otp}}'
          elixir-version: '${{matrix.pair.elixir}}'

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: |
            deps
            _build
          key: >-
            ${{ runner.os
            }}-mix-${{matrix.pair.elixir}}-${{matrix.pair.otp}}-${{
            hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{matrix.pair.elixir}}-${{matrix.pair.otp}}-

      - name: Run mix deps.get
        run: mix deps.get --only test

      - name: Run mix format
        run: mix format --check-formatted

      - name: Run mix deps.compile
        run: mix deps.compile

      - name: Run mix compile
        run: mix compile --warnings-as-errors

      - name: Run credo
        run: mix credo --strict

      - name: Run tests
        run: mix coveralls.github
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Run dialyzer
        run: mix dialyzer --format github --format dialyxir
